#!/bin/bash

# description: Transfer Downtimes

### BEGIN INIT INFO
# Provides:       transfer_downtimes
# Required-Start: 
# Required-Stop:  
# Default-Start:  2 3 5
# Default-Stop:
# Description:    Start Transfer Downtimes daemon
### END INIT INFO

. /omd/sites/dev16/etc/omd/site.conf

PIDFILE=$OMD_ROOT/tmp/run/transfer_downtimes.pid
DAEMON=$OMD_ROOT/local/bin/transfer_downtimes.py
OPTS="--source othersite"

case "$1" in
    start)
 	echo -n 'Starting transfer_downtimes...'
	if [ -e "$PIDFILE" ] ; then
	    PID=$(cat $PIDFILE)
	    if [ -n "$PID" ] && ps $PID > /dev/null 2>&1 ; then
		echo "Already running."
		exit 0
	    fi
	    echo "removing stale pid file..."
	    rm -f $PIDFILE
	fi

        if $DAEMON $OPTS ; then
            echo OK
            exit 0
        else
            echo Failed
            exit 1
        fi
    ;;
    stop)
	echo -n 'Stopping transfer_downtimes...'
        PID=$(cat $PIDFILE 2>/dev/null)
        if [ -z "$PID" ] ; then
	    echo "not running."
        elif kill "$PID" ; then
            echo -n 'waiting for termination..'
	    N=0
	    while [ -d /proc/$PID ] ; do
		sleep 0.05
                if [ $((N % 20)) -eq 0 ]; then
		    echo -n .
                fi
		N=$((N+1))
		if [ $N -ge 400 ] ; then
		    echo "still running after 20 secs!"
		    exit 1
                fi
	    done    
	    echo "OK"
        else
	    echo "Failed"
        fi
    ;;
    restart|reload)
	$0 stop
	$0 start
    ;;
    status)
	echo -n 'Checking status of transfer_downtimes...'
	if [ -e "$PIDFILE" ] ; then
	    PID=$(cat $PIDFILE)
	    if [ -n "$PID" ] && ps $PID > /dev/null 2>&1 ; then
		echo "running"
		exit 0
	    fi
	fi
	echo "stopped"
	exit 1
    ;;
    *)
	echo "Usage: $0 {start|stop|restart|reload|status}"
    ;;
esac
